-------------- Bugs

- When resizing window, adjust reference frame position
- When clicking in a blank space of the bodies list, clear the selection
- Sometimes the program crashes when switching solvers (seen on universe with a high number of planets and after a long simulation time)
- Scrollbar performace is kinda sluggish. Look at testsw.cpp for a references about using scrollbars.
- Simulation glitches when switching to Ralston RK4 solver (but only when switching - it works normally when after that)
- Simulation glitches when changing timestep on multi-step methods.
- Bezier spline is glitched due to wrong parametrization.

-------------- To Do

- Do transition steps when switching solvers.
- Milestones

-------------- Backlog

-------------- Milestones

- 0.8 (japla-supersedure milestone)

Implement view movement speed - done
Implement capability to change observer's reference frame to the same as the mass center of some arbitrary set of bodies - done
When holding R (add random body), after 1 second, starts spamming bodies until user releases the R key. - done

- 0.9 (physics milestone)

Show info about system's energy (kinetic, potential, total, etc)
Add random orbiting planet functionality
Bouncing bodies
G exp.
Hightlight bodies inside the roche limit
Introduce variations to the parameters of newly created bodies

- 1.0 (planets-supersedure/usability milestone)

Undo functionality
Show paused/resumed state more explicitly
Save preferences (window positions, paths, etc)
Implement button with icon and offer icons-only buttons (pixmaps can be used, taking advantage of the create_pixmap() function; examples in sw-pixmaps.h)
Theming functionality (mainly to match many OSes' ones)
Try to load the universe setting a fitting zoom for its size.
Use TCLAP for command line usage.
Basic "help" dialog

- 1.x

Rotate functionality
Redo functionality
Capability to change background color
Add option to disable orbit trace (which would stop recording position, for performance's sake)
Edit bodies id's
Show bodies id's on planetarium
Show per body info (velocity, acceleration, mass, etc) - a body panel below bodies list
Dynamically change bodies attributes
Implement load/save on other formats (csv, xml, json)
Implement multi-step integration methods (Adams-Bashford, Adams-Molton)
Implement optional Barnes-Hut tree to optimize calculations
Hide left bar, hide all mode.
Add optional single-threaded mode
Implement load/save on other formats (ods, prop, yaml)
Improve bodies list (use headed table instead of list, sort by)
Implement load/save on the Java Serialized Object File (.ser) ('japla's old format)
Implement additional integration methods (Midpoint, Verlet, etc)
Bodies presets
Merge universes from different files (superposition, concatenation, etc)
Advanced presets (solar systems, planet and moons, galaxy, cluster, etc)
Keep track of opened file state (modified, etc)
Optimize drawing by only redrawing the rectangular areas around bodies. (SDL_UpdateRect/SDL_UpdateRects)
Types of bodies (planet, star, etc)
Chemical evolution of bodies (aging)
Adaptive stepsize
3D mode

-------------- Old ('japla) notes

* to do:

- 0.8.x milestone:

control simulation parameters from gui - done
step size - done
display time - done
gravity - done
new body density - done
new body diameter ratio - done
view movement speed - done

- 0.9 milestone:

display period - done
dynamically change bodies colors - done
trace orbits - done
improve physics calculations with some fairly advanced numeric method (rk4, ab, am) - 3/5 done
capability to change observer's reference frame to the same as the mass center of some arbitrary set of bodies
show info about system's energy (kinetic, potential, total, etc)

- 1.0 milestone:

add random planet functionality
add random orbiting planet functionality
undo functionality
G exp.
Bouncing bodies
basic "help" dialog
improve "about" dialog
major graphics overhaul (simplistic buttons-only gui)

- 1.x milestone:

redo functionality
change background color functionality
improve bodies list (use table instead of jlist)
show/edit bodies' tag
specify mass of created bodies
show per body info (velocity, acceleration, mass, etc) - a body panel below bodies list
dynamically change bodies' attributes
remove a chosen body
bodies presets
highlight body when selected on the list - done
merge universes from different files (superposition, concatenation, etc)

** some ideas (very new features)

adaptive stepsize
advanced presets (solar systems, planet and moons, galaxy, cluster, etc)
types of bodies (planet, star, etc)
chemical evolution of bodies (aging)
3D mode

** ideas for file types:

Serialized Java Objects (*.sjo)
Plain text (*.txt)
Comma Separated Values (*.csv)
XML Universe (*.xml)
Star System XML (*.ssx)

** solvers:

Euler method - done
Leapfrog method - done
Semi-implicit Euler/Euler-Cromer/Newton-Stormer-Verlet (NSV) - done
Semi-implicit Euler 2nd variant - done
Heun/RK2 - done
RK4 - done
Midpoint method - pending <see http://en.wikipedia.org/wiki/Midpoint_method>
Verlet - pending <see en.wikipedia.org/wiki/Verlet_integration>

** other ideas:
use Launch4j to create executable <http://launch4j.sourceforge.net/>

