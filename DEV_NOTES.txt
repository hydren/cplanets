-------------- Bugs

- When resizing window, adjust reference frame position
- When clicking in a blank space of the bodies list, clear the selection
- Sometimes the program crashes when switching solvers (seen on universe with a high number of planets and after a long simulation time)
- Scrollbar performace is kinda sluggish. Look at testsw.cpp for a references about using scrollbars.
- Simulation glitches when changing timestep on multi-step methods.
- Bezier spline is glitched due to wrong parametrization.

-------------- To Do

- Milestones

-------------- Backlog

-------------- Milestones

- 0.8 (japla-supersedure milestone)

Implement view movement speed - done
Implement capability to change observer's reference frame to the same as the mass center of some arbitrary set of bodies - done
When holding R (add random body), after 1 second, starts spamming bodies until user releases the R key. - done

- 0.9 (physics milestone)

Implement Rk2 and Rk4 integration methods - done
Show info about system's energy (kinetic, potential, total, etc)
Add random orbiting planet functionality
Bouncing bodies
G exp.
Hightlight bodies inside the roche limit
Introduce variations to the parameters of newly created bodies

- 1.0 (planets-supersedure/usability milestone)

Undo functionality
Show paused/resumed state more explicitly
Save preferences (window positions, paths, etc)
Implement button with icon and offer icons-only buttons (pixmaps can be used, taking advantage of the create_pixmap() function; examples in sw-pixmaps.h)
Theming functionality (mainly to match many OSes' ones)
Try to load the universe setting a fitting zoom for its size.
Use TCLAP for command line usage.
Basic "help" dialog

- 1.x

Rotate functionality
Redo functionality
Capability to change background color
Add option to disable orbit trace (which would stop recording position, for performance's sake)
Edit bodies id's
Show bodies id's on planetarium
Show per body info (velocity, acceleration, mass, etc) - a body panel below bodies list
Dynamically change bodies attributes
Implement load/save on other formats (csv, xml, json)
Implement Rabiei's improved multi-step RK3.
Implement Embedded/Adaptive RK (make a GUI for specifying max. error with adaptive timestep)
Attempt to implement Numerov's method-based solver.
Attempt to implement Gauss-Legendre's implicit RK with other RK as predictor.
Implement optional Barnes-Hut tree to optimize calculations
Hide left bar, hide all mode.
Add optional single-threaded mode
Implement load/save on other formats (ods, prop, yaml)
Improve bodies list (use headed table instead of list, sort by)
Implement load/save on the Java Serialized Object File (.ser) ('japla's old format)
Implement additional integration methods (Midpoint, Verlet, etc)
Bodies presets
Merge universes from different files (superposition, concatenation, etc)
Advanced presets (solar systems, planet and moons, galaxy, cluster, etc)
Keep track of opened file state (modified, etc)
Optimize drawing by only redrawing the rectangular areas around bodies. (SDL_UpdateRect/SDL_UpdateRects)
Types of bodies (planet, star, etc)
Chemical evolution of bodies (aging)
Adaptive stepsize
3D mode


-------------- Misc. references

RK methods
https://github.com/scijs/ode-rk4
http://mymathlib.com/diffeq/runge-kutta/runge_kutta.html
http://www.scottsarra.org/nHam/nHam.html

Gauss-Legendre
https://en.wikipedia.org/wiki/Gauss%E2%80%93Legendre_method

Numerov's method
https://en.wikipedia.org/wiki/Numerov%27s_method
http://www.mymathlib.com/diffeq/second_order/numerov.html

ODE for N-body
http://tutorial.math.lamar.edu/Classes/DE/SystemsDE.aspx
http://www.kof.zcu.cz/st/dis/schwarzmeier/gravitational_simulation.html


